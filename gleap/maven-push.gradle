apply plugin: 'com.android.library'
apply plugin: 'maven-publish'
apply plugin: 'signing'

def getReleaseRepositoryUrl() {
    return hasProperty('RELEASE_REPOSITORY_URL') ? RELEASE_REPOSITORY_URL
            : "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
}

def getRepositoryUsername() {
    return hasProperty('NEXUS_USERNAME') ? NEXUS_USERNAME : ""
}

def getRepositoryPassword() {
    return hasProperty('NEXUS_PASSWORD') ? NEXUS_PASSWORD : ""
}

tasks.register('androidSourcesJar', Jar) {
    archiveClassifier.set('sources')
    from(android.sourceSets.main.java.sourceFiles)
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            // Use the library's AAR as the artifact
            artifact("$buildDir/outputs/aar/${project.name}-release.aar")

            // Additional metadata (optional)
            groupId = 'com.gleap' // Update as needed
            artifactId = 'gleap-sdk'
            version = '1.0.0'

            pom {
                name = 'Gleap SDK'
                description = 'The Gleap SDK for Android'
                url = 'https://www.gleap.io'

                licenses {
                    license {
                        name = 'Apache-2.0'
                        url = 'https://www.apache.org/licenses/LICENSE-2.0'
                    }
                }

                developers {
                    developer {
                        id = 'gleap'
                        name = 'Gleap Team'
                    }
                }
            }
        }
    }

    repositories {
        maven {
            url = uri("https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/") // Update as needed
            credentials {
                username = project.findProperty('NEXUS_USERNAME') ?: ''
                password = project.findProperty('NEXUS_PASSWORD') ?: ''
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}
